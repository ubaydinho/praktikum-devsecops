name: CI Security & Docker

on:
  push:
    branches: [ main ]
  pull_request:

env:
  IMAGE_NAME: notes-app

jobs:
  test:
    name: Unit Test (pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt -r dev-requirements.txt
      - run: pytest -q

  sast:
    name: SAST (Bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install bandit
      - run: bandit -r . -ll -iii

  sca:
    name: SCA (pip-audit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install pip-audit
      - run: pip-audit -r requirements.txt || pip-audit -r dev-requirements.txt

  secret_scan:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source=$GITHUB_WORKSPACE --no-banner --redact

  build_and_push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [ test, sast, sca, secret_scan ]
    steps:
      - uses: actions/checkout@v4
      - name: Set short SHA
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}

  image_scan:
    name: Image Scan (Trivy from Docker Hub)
    runs-on: ubuntu-latest
    needs: [ build_and_push ]
    steps:
      - name: Compute short SHA
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      - uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
          severity: CRITICAL,HIGH
          exit-code: 1
